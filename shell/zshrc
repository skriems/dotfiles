export LC_ALL=de_DE.UTF-8

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="wezm"

export NVM_DIR="$HOME/.nvm"
export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python
export WORKON_HOME=$HOME/.virtualenvs
[ -f /usr/local/bin/virtualenvwrapper.sh ] && . /usr/local/bin/virtualenvwrapper.sh

# enable python-jedi in REPL
export PYTHONSTARTUP="$(python -m jedi repl)"

# use `keychain` to manage ssh-keys
eval $(keychain --eval --quiet --confhost ~/.ssh/id_rsa)

plugins=(docker docker-compose fzf git virtualenvwrapper)

source $ZSH/oh-my-zsh.sh

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='nvim'
fi

# aliases
alias rust-musl-builder='docker run --rm -it -v "$(pwd)":/home/rust/src ekidd/rust-musl-builder'

###############################
# original content
###############################
HISTFILE=~/.histfile
HISTSIZE=500000
SAVEHIST=500000
unsetopt beep
bindkey -v

zstyle :compinstall filename "$HOME/.zshrc"

# prompt theme
# autoload -Uz promptinit
# promptinit
# prompt off

# completion
autoload -Uz compinit
compinit
setopt COMPLETE_ALIASES

# make newly installed executables available to completion
zstyle ':completion:*' rehash true

# history search
autoload -Uz up-line-or-beginning-search down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search

[[ -n "${key[Up]}"   ]] && bindkey "${key[Up]}"   up-line-or-beginning-search
[[ -n "${key[Down]}" ]] && bindkey "${key[Down]}" down-line-or-beginning-search

#
# [start] remember the DIRSTACKSIZE last visited folders
# use "dirs -v"
#DIRSTACKFILE="$HOME/.cache/zsh/dirs"
#if [[ -f $DIRSTACKFILE ]] && [[ $#dirstack -eq 0 ]]; then
#  dirstack=( ${(f)"$(< $DIRSTACKFILE)"} )
#  [[ -d $dirstack[1] ]] && cd $dirstack[1]
#fi
#chpwd() {
#  print -l $PWD ${(u)dirstack} >$DIRSTACKFILE
#}
#DIRSTACKSIZE=20
#setopt AUTO_PUSHD PUSHD_SILENT PUSHD_TO_HOME
## Remove duplicate entries
#setopt PUSHD_IGNORE_DUPS
## This reverts the +/- operators.
#setopt PUSHD_MINUS
#
# [end] remember the DIRSTACKSIZE last visited folders
#
if type kubectl &>/dev/null; then
    source <(kubectl completion zsh)
fi
if type helm &>/dev/null; then
    source <(helm completion zsh)
fi

# ~/.local/bin          # pip install --user
# ~/.cargo/bin          # cargo
# ~/tools/flutter/bin   # flutter
export PATH=$PATH:~/.local/bin:~/.cargo/bin:~/tools/flutter/bin

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
# Following FZF env vars can be customized
export FZF_DEFAULT_OPTS="--no-mouse --height 60% -1 --reverse --multi --inline-info \
--preview='[[ \$(file --mime {}) =~ binary ]] && echo {} is a binary file || \
(bat --color=always {} || cat {}) 2> /dev/null | head -300' \
--bind='f3:execute(bat {} || less -f {}),f2:toggle-preview,shift-up:preview-page-up,shift-down:preview-page-down,ctrl-a:select-all+accept,ctrl-y:execute-silent(echo {+} | pbcopy)'"
export FZF_DEFAULT_COMMAND='rg --files --hidden --follow -g "!{.git,node_modules}/*" 2> /dev/null'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
# export FZF_CTRL_T_OPTS
# export FZF_CTRL_C_COMMAND
# export FZF_CTRL_C_OPTS
# export FZF_CTRL_R_OPTS
# bind -x '"\C-p": nvim $(fzf);'

export BAT_CONFIG_DIR="~/.config/bat/config"

export CARGO_TARGET_DIR="$HOME/.cargo/target"
# load the platform specific zshrc
[ -f "$HOME/.zshrc_platform" ] && source "$HOME/.zshrc_platform"

alias passw="PASSWORD_STORE_DIR=~/.password-store-work pass"

alias ls='ls --color=auto'
alias l='ls -l --color=auto'
alias ll="ls -la --color=auto"
alias df="df -h"
alias du="du -h"
